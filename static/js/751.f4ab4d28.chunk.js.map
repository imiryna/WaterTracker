{"version":3,"file":"static/js/751.f4ab4d28.chunk.js","mappings":"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","sources":["components/SignIn/SignIn.styled.js","components/SignIn/SignIn.jsx","pages/SignInPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport BottleImgDes from 'Images/Backgrounds/bottle-sign-in.png';\nimport BottleImgTab from 'Images/Backgrounds/bottle-sign-in-tablet.png';\nimport BottleImgMob from 'Images/Backgrounds/bottle-sign-in-mobile.png'\nimport BubblesDes from 'Images/Backgrounds/background-bubbles-main-page.png';\nimport BubblesTab from 'Images/Backgrounds/background-bubbles-main-page-tablet.png';\nimport BubblesMob from 'Images/Backgrounds/background-bubbles-main-page-mobile.png'\nimport {ReactComponent as ShowPass} from \"Images/Icons/show-pass.svg\";\nimport {ReactComponent as HidePass} from \"Images/Icons/hide-pass.svg\";\nimport { NavLink } from 'react-router-dom';\n\n\nexport const AuthPageDiv = styled.div`\n  background-color: #fff;\n  background-repeat: no-repeat;\n  background-position: center bottom;\n  height:680px;\n  background-image: url(${BottleImgMob}), url(${BubblesMob});\n\n  @media (min-width: 768px) {\n    background-image: url(${BottleImgTab}), url(${BubblesTab});\n    background-position: right bottom;\n    width: 768px;\n  }\n\n  @media (min-width: 1440px) {\n    background-image: url(${BottleImgDes}), url(${BubblesDes});\n    background-position: left bottom;\n    width: 1440px;\n  }\n`;\n\nexport const AuthDiv = styled.div`\n  padding-top: 80px;\n  padding-left: 20px;\n  padding-right: 20px;\n\n\n  @media (min-width: 768px) {\n    padding-top: 104px;\n    padding-left: 32px;\n    padding-right: 400px;\n    width: 768px;\n  }\n\n  @media (min-width: 1440px) {\n    padding-top: 222px;\n    padding-right: 18px;\n    padding-left: 840px;\n    width: 1440px;\n  }\n\n`;\nexport const AuthStyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  \n`;\n\nexport const FormName = styled.h2`\n  color: #2f2f2f;\n  font-family: Roboto;\n  font-size: 26px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 32px;\n`;\nexport const InputDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  color: #2F2F2F;\n  font-family: Roboto;\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 24px;\n`;\n\nexport const StyledInput = styled.input`\n  width: 280px;\n  padding: 12px 30px 12px 10px; \n  border-radius: 6px;\n  border: 1px solid #D7E3FF;\n  background: #FFF;\n  transition: border-color 0.3s;\n  color: #407BFF;\n\n  &:focus {\n    outline: none;\n    border-color: #D7E3FF;\n  }\n\n  &::placeholder {\n    color: #9EBBFF;\n  }\n\n  &.error {\n    border: 1px solid #EF5050;\n    color: #EF5050;\n  }\n\n  \n\n  @media (min-width: 768px) {\n    width: 336px;\n  }\n\n  @media (min-width: 1440px) {\n    width: 384px;\n  }\n`;\n\nexport const IconContainer = styled.div`\nposition: relative;\nwidth: 280px;\n\n@media (min-width: 768px) {\n  width: 336px;\n}\n\n@media (min-width: 1440px) {\n  width: 384px;\n}\n`;\n\nexport const ShowPassIcon = styled(ShowPass)`\n  width: 16px;\n  height: 16px;\n  stroke: #407BFF;\n`;\n\nexport const HidePassIcon = styled(HidePass)`\n  width: 16px;\n  height: 16px;\n  stroke: #407BFF;\n`;\n\n\nexport const FormButton = styled.button`\n  padding: 10px 30px;\n  border-radius: 10px;\n  background: #407bff;\n  box-shadow: 0px 4px 8px 0px rgba(64, 123, 255, 0.34);\n  width: 280px;\n  color: #fff;\n  text-align: center;\n  font-family: Roboto;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 20px;\n  letter-spacing: 0%;\n  text-align: center;\n\n\n\n  @media (min-width: 768px) {\n    font-size: 18px;\n    line-height: 24px;\n    width: 336px;\n  }\n\n  @media (min-width: 1440px) {\n    width: 384px;\n  }\n`;\n\nexport const AuthDataError = styled.div`\ncolor: #EF5050;\nfont-family: Roboto;\nfont-size: 14px;\nfont-style: normal;\nfont-weight: 400;\nline-height: 18px;\nmargin-top: 4px;\n`\n\nexport const RedirectButton = styled(NavLink)`\ncolor: #407BFF;\nfont-family: Roboto;\nfont-size: 16px;\nfont-style: normal;\nfont-weight: 400;\nline-height: 20px; \n`\nexport const NavDiv = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 280px;\n\n\n  @media (min-width: 768px) {\n    width: 336px;\n  }\n\n  @media (min-width: 1440px) {\n    width: 384px;\n  }\n`\n\nexport const ButtonIcon = styled.button`\nposition: absolute;\nright: 10px;\ntop: 50%;\ntransform: translateY(-50%);\ncursor: pointer;\nbackground: transparent;\n`\n\n\n","import React, { useState, useEffect } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useFormik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as Yup from 'yup';\nimport Snackbar from '@mui/material/Snackbar';\nimport Alert from '@mui/material/Alert';\nimport {\n  AuthStyledForm,\n  AuthDiv,\n  FormName,\n  InputDiv,\n  StyledInput,\n  FormButton,\n  AuthDataError,\n  RedirectButton,\n  NavDiv,\n  ShowPassIcon,\n  HidePassIcon,\n  IconContainer, \n  ButtonIcon,\n\n} from './SignIn.styled';\nimport {\n  selectAuthError,\n  selectAuthAuthenticated,\n} from 'Store/auth/authSelector';\nimport { loginThunk } from 'Store/auth/authOperations';\n\nconst validationSchema = Yup.object({\n  email: Yup.string('Enter your email')\n    .email('Enter a valid email')\n    .required('Email is required'),\n  password: Yup.string('Enter your password')\n    .min(8, 'Password should be of minimum 8 characters length')\n    .max(64, 'Password should be of maximum 64 characters length')\n    .required('Password is required'),\n});\n\nexport const AuthForm = () => {\n  const dispatch = useDispatch();\n  const authError = useSelector(selectAuthError);\n  const isAuthenticated = useSelector(selectAuthAuthenticated);\n\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: validationSchema,\n    onSubmit: async values => {\n      try {\n        await dispatch(loginThunk(values));\n        formik.resetForm();\n      } catch (error) {\n        setOpenSnackbar(true);\n      }\n    },\n  });\n\n  useEffect(() => {\n    if (authError) {\n      setOpenSnackbar(true);\n    }\n  }, [authError]);\n\n  const handleCloseSnackbar = () => {\n    setOpenSnackbar(false);\n  };\n\n  if (isAuthenticated) {\n    return <Navigate to=\"/\" />;\n  }\n\n  return (\n    <AuthDiv>\n      <AuthStyledForm onSubmit={formik.handleSubmit}>\n        <FormName>Sign in</FormName>\n        <InputDiv>\n          <label htmlFor=\"email\">Enter your email</label>\n          <StyledInput\n            id=\"email\"\n            name=\"email\"\n            type=\"email\"\n            onChange={formik.handleChange}\n            value={formik.values.email}\n            placeholder=\"E-mail\"\n            className={\n              formik.errors.email && formik.touched.email ? 'error' : ''\n            }\n          />\n          {formik.errors.email && formik.touched.email ? (\n            <AuthDataError>{formik.errors.email}</AuthDataError>\n          ) : null}\n        </InputDiv>\n\n        <InputDiv>\n          <label htmlFor=\"password\">Enter your password</label>\n          <IconContainer>\n             <StyledInput\n            id=\"password\"\n            name=\"password\"\n            type={showPassword ? 'text' : 'password'}\n            onChange={formik.handleChange}\n            value={formik.values.password}\n            placeholder=\"Password\"\n            className={formik.errors.password && formik.touched.password ? 'error' : ''}\n          />\n          \n            <ButtonIcon\n              type=\"button\" \n              onClick={() => setShowPassword(!showPassword)}\n            >\n              {showPassword ? <ShowPassIcon /> : <HidePassIcon />}\n            </ButtonIcon>\n          </IconContainer>\n          {formik.errors.password && formik.touched.password ? (\n            <AuthDataError>{formik.errors.password}</AuthDataError>\n          ) : null}\n        </InputDiv>\n\n        <FormButton type=\"submit\">Sign In</FormButton>\n        <NavDiv>\n          <RedirectButton to=\"/signup\">Sign Up</RedirectButton>\n          <RedirectButton to=\"/forgotpassword\">Forgot password?</RedirectButton>\n          </NavDiv>\n      </AuthStyledForm>\n\n      <Snackbar\n        open={openSnackbar}\n        autoHideDuration={6000}\n        onClose={handleCloseSnackbar}\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      >\n        <Alert onClose={handleCloseSnackbar} severity=\"error\">\n          {authError}\n        </Alert>\n      </Snackbar>\n    </AuthDiv>\n  );\n};\n\nexport default AuthForm;\n","import React from 'react';\nimport AuthForm from 'components/SignIn/SignIn';\nimport { AuthPageDiv } from '../components/SignIn/SignIn.styled';\n\nconst SigninPage = () => {\n  return <AuthPageDiv>\n    <AuthForm />\n  </AuthPageDiv>\n};\nexport default SigninPage;\n"],"names":["AuthPageDiv","styled","_templateObject","_taggedTemplateLiteral","BottleImgMob","BottleImgTab","BubblesTab","BottleImgDes","BubblesDes","AuthDiv","_templateObject2","AuthStyledForm","_templateObject3","FormName","_templateObject4","InputDiv","_templateObject5","StyledInput","_templateObject6","IconContainer","_templateObject7","ShowPassIcon","ShowPass","_templateObject8","HidePassIcon","HidePass","_templateObject9","FormButton","_templateObject10","AuthDataError","_templateObject11","RedirectButton","NavLink","_templateObject12","NavDiv","_templateObject13","ButtonIcon","_templateObject14","validationSchema","Yup","email","required","password","min","max","AuthForm","dispatch","useDispatch","authError","useSelector","selectAuthError","isAuthenticated","selectAuthAuthenticated","openSnackbar","setOpenSnackbar","useState","showPassword","setShowPassword","formik","useFormik","initialValues","onSubmit","async","loginThunk","values","resetForm","error","useEffect","handleCloseSnackbar","_jsx","Navigate","to","_jsxs","children","handleSubmit","htmlFor","id","name","type","onChange","handleChange","value","placeholder","className","errors","touched","onClick","Snackbar","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","Alert","severity","SigninPage"],"sourceRoot":""}