{"version":3,"file":"static/js/55.61c2e826.chunk.js","mappings":"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","sources":["components/SignIn/SignIn.styled.js","components/UpdatePassword/UpdatePassword.jsx","pages/UpdatePasswordPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport BottleImgDes from 'Images/Backgrounds/bottle-sign-in.png';\nimport BottleImgTab from 'Images/Backgrounds/bottle-sign-in-tablet.png';\nimport BottleImgMob from 'Images/Backgrounds/bottle-sign-in-mobile.png'\nimport BubblesDes from 'Images/Backgrounds/background-bubbles-main-page.png';\nimport BubblesTab from 'Images/Backgrounds/background-bubbles-main-page-tablet.png';\nimport BubblesMob from 'Images/Backgrounds/background-bubbles-main-page-mobile.png'\nimport {ReactComponent as ShowPass} from \"Images/Icons/show-pass.svg\";\nimport {ReactComponent as HidePass} from \"Images/Icons/hide-pass.svg\";\nimport { NavLink } from 'react-router-dom';\n\n\nexport const AuthPageDiv = styled.div`\n  background-color: #fff;\n  background-repeat: no-repeat;\n  background-position: center bottom;\n  height:680px;\n  background-image: url(${BottleImgMob}), url(${BubblesMob});\n\n  @media (min-width: 768px) {\n    background-image: url(${BottleImgTab}), url(${BubblesTab});\n    background-position: right bottom;\n    width: 768px;\n  }\n\n  @media (min-width: 1440px) {\n    background-image: url(${BottleImgDes}), url(${BubblesDes});\n    background-position: left bottom;\n    width: 1440px;\n  }\n`;\n\nexport const AuthDiv = styled.div`\n  padding-top: 80px;\n  padding-left: 20px;\n  padding-right: 20px;\n\n\n  @media (min-width: 768px) {\n    padding-top: 104px;\n    padding-left: 32px;\n    padding-right: 400px;\n    width: 768px;\n  }\n\n  @media (min-width: 1440px) {\n    padding-top: 222px;\n    padding-right: 18px;\n    padding-left: 840px;\n    width: 1440px;\n  }\n\n`;\nexport const AuthStyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  \n`;\n\nexport const FormName = styled.h2`\n  color: #2f2f2f;\n  font-family: Roboto;\n  font-size: 26px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 32px;\n`;\nexport const InputDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  color: #2F2F2F;\n  font-family: Roboto;\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 24px;\n`;\n\nexport const StyledInput = styled.input`\n  width: 280px;\n  padding: 12px 30px 12px 10px; \n  border-radius: 6px;\n  border: 1px solid #D7E3FF;\n  background: #FFF;\n  transition: border-color 0.3s;\n  color: #407BFF;\n\n  &:focus {\n    outline: none;\n    border-color: #D7E3FF;\n  }\n\n  &::placeholder {\n    color: #9EBBFF;\n  }\n\n  &.error {\n    border: 1px solid #EF5050;\n    color: #EF5050;\n  }\n\n  \n\n  @media (min-width: 768px) {\n    width: 336px;\n  }\n\n  @media (min-width: 1440px) {\n    width: 384px;\n  }\n`;\n\nexport const IconContainer = styled.div`\nposition: relative;\nwidth: 280px;\n\n@media (min-width: 768px) {\n  width: 336px;\n}\n\n@media (min-width: 1440px) {\n  width: 384px;\n}\n`;\n\nexport const ShowPassIcon = styled(ShowPass)`\n  width: 16px;\n  height: 16px;\n  stroke: #407BFF;\n`;\n\nexport const HidePassIcon = styled(HidePass)`\n  width: 16px;\n  height: 16px;\n  stroke: #407BFF;\n`;\n\n\nexport const FormButton = styled.button`\n  padding: 10px 30px;\n  border-radius: 10px;\n  background: #407bff;\n  box-shadow: 0px 4px 8px 0px rgba(64, 123, 255, 0.34);\n  width: 280px;\n  color: #fff;\n  text-align: center;\n  font-family: Roboto;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 20px;\n  letter-spacing: 0%;\n  text-align: center;\n\n  &:hover {\n    box-shadow: 0px 4px 14px 0px rgba(64, 123, 255, 0.54);\n  }\n\n\n\n  @media (min-width: 768px) {\n    font-size: 18px;\n    line-height: 24px;\n    width: 336px;\n  }\n\n  @media (min-width: 1440px) {\n    width: 384px;\n  }\n`;\n\nexport const AuthDataError = styled.div`\ncolor: #EF5050;\nfont-family: Roboto;\nfont-size: 14px;\nfont-style: normal;\nfont-weight: 400;\nline-height: 18px;\nmargin-top: 4px;\n`\n\nexport const RedirectButton = styled(NavLink)`\ncolor: #407BFF;\nfont-family: Roboto;\nfont-size: 16px;\nfont-style: normal;\nfont-weight: 400;\nline-height: 20px; \n\n&:hover {\n  color: rgb(255, 157, 67);\n}\n`\nexport const NavDiv = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 280px;\n\n\n  @media (min-width: 768px) {\n    width: 336px;\n  }\n\n  @media (min-width: 1440px) {\n    width: 384px;\n  }\n`\n\nexport const ButtonIcon = styled.button`\nposition: absolute;\nright: 10px;\ntop: 50%;\ntransform: translateY(-50%);\ncursor: pointer;\nbackground: transparent;\n`\n\n\n","import React, { useState, useEffect } from 'react';\nimport { Navigate, redirect } from 'react-router-dom';\nimport {\n  AuthStyledForm,\n  AuthDiv,\n  FormName,\n  InputDiv,\n  StyledInput,\n  FormButton,\n  AuthDataError,\n  RedirectButton,\n} from '../SignIn/SignIn.styled';\nimport {\n  selectAuthError,\n  selectAuthAuthenticated,\n} from 'Store/auth/authSelector';\nimport { useFormik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as Yup from 'yup';\nimport Snackbar from '@mui/material/Snackbar';\nimport Alert from '@mui/material/Alert';\nimport { updatePasswordThunk } from 'Store/auth/authOperations';\n\nconst validationSchema = Yup.object({\n  password: Yup.string('Enter your password')\n    .min(8, 'Password should be of minimum 8 characters length')\n    .max(64, 'Password should be of maximum 64 characters length')\n    .required('Password is required'),\n  repeatPassword: Yup.string('Enter your password')\n    .oneOf([Yup.ref('password'), null], 'Passwords must match')\n    .required('Password is required'),\n});\n\nexport const UpdatePasswordForm = () => {\n  const dispatch = useDispatch();\n  const authError = useSelector(selectAuthError);\n  const isAuthenticated = useSelector(selectAuthAuthenticated);\n\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n\n  const formik = useFormik({\n    initialValues: {\n      password: '',\n      repeatPassword: '',\n    },\n\n    validationSchema: validationSchema,\n    onSubmit: async values => {\n      try {\n        await dispatch(\n          updatePasswordThunk({\n            restoreToken,\n            password: { password: values.password },\n          })\n        );\n        formik.resetForm();\n        return redirect('/signin');\n      } catch (error) {\n        setOpenSnackbar(true);\n      }\n    },\n  });\n\n  //  get token\n  const url = window.location.href;\n  const urlObject = new URL(url);\n  const pathname = urlObject.search;\n  const segment = pathname.split('=');\n  const restoreToken = segment[1];\n\n  useEffect(() => {\n    if (authError) {\n      setOpenSnackbar(true);\n    }\n  }, [authError]);\n\n  const handleCloseSnackbar = () => {\n    setOpenSnackbar(false);\n  };\n\n  if (isAuthenticated) {\n    return <Navigate to=\"/signin\" />;\n  }\n\n  return (\n    <AuthDiv>\n      <AuthStyledForm onSubmit={formik.handleSubmit}>\n        <FormName>Reset password</FormName>\n        <InputDiv>\n          <label htmlFor=\"password\">Enter your new password</label>\n          <StyledInput\n            id=\"password\"\n            name=\"password\"\n            type=\"password\"\n            onChange={formik.handleChange}\n            value={formik.values.password}\n            placeholder=\"Password\"\n          />\n          {formik.errors.password && formik.touched.password ? (\n            <AuthDataError>{formik.errors.password}</AuthDataError>\n          ) : null}\n        </InputDiv>\n\n        <InputDiv>\n          <label htmlFor=\"repeatPassword\">Repeat your password</label>\n          <StyledInput\n            id=\"repeatPassword\"\n            name=\"repeatPassword\"\n            type=\"password\"\n            onChange={formik.handleChange}\n            value={formik.values.repeatPassword}\n            placeholder=\"Repeat password\"\n          />\n          {formik.errors.repeatPassword && formik.touched.repeatPassword ? (\n            <AuthDataError>{formik.errors.repeatPassword}</AuthDataError>\n          ) : null}\n        </InputDiv>\n\n        <FormButton type=\"submit\">Reset password</FormButton>\n        <RedirectButton to=\"/signin\">Sign In</RedirectButton>\n      </AuthStyledForm>\n      <Snackbar\n        open={openSnackbar}\n        autoHideDuration={6000}\n        onClose={handleCloseSnackbar}\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      >\n        <Alert onClose={handleCloseSnackbar} severity=\"error\">\n          Fill the fields to reset your password\n        </Alert>\n      </Snackbar>\n    </AuthDiv>\n  );\n};\n\nexport default UpdatePasswordForm;\n","import React from \"react\";\nimport { AuthPageDiv } from \"components/SignIn/SignIn.styled\";\nimport UpdatePasswordForm from \"components/UpdatePassword/UpdatePassword\";\n\nconst UpdatePassword = () => {\n    return <AuthPageDiv>\n        <UpdatePasswordForm/>\n    </AuthPageDiv>\n};\n\nexport default UpdatePassword;"],"names":["AuthPageDiv","styled","_templateObject","_taggedTemplateLiteral","BottleImgMob","BottleImgTab","BubblesTab","BottleImgDes","BubblesDes","AuthDiv","_templateObject2","AuthStyledForm","_templateObject3","FormName","_templateObject4","InputDiv","_templateObject5","StyledInput","_templateObject6","IconContainer","_templateObject7","ShowPassIcon","ShowPass","_templateObject8","HidePassIcon","HidePass","_templateObject9","FormButton","_templateObject10","AuthDataError","_templateObject11","RedirectButton","NavLink","_templateObject12","NavDiv","_templateObject13","ButtonIcon","_templateObject14","validationSchema","Yup","password","min","max","required","repeatPassword","oneOf","UpdatePasswordForm","dispatch","useDispatch","authError","useSelector","selectAuthError","isAuthenticated","selectAuthAuthenticated","openSnackbar","setOpenSnackbar","useState","formik","useFormik","initialValues","onSubmit","async","updatePasswordThunk","restoreToken","values","resetForm","redirect","error","url","window","location","href","URL","search","split","useEffect","handleCloseSnackbar","_jsx","Navigate","to","_jsxs","children","handleSubmit","htmlFor","id","name","type","onChange","handleChange","value","placeholder","errors","touched","Snackbar","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","Alert","severity","UpdatePassword"],"sourceRoot":""}